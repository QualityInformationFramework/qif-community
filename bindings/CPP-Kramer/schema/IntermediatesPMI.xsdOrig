<?xml version="1.0" encoding="UTF-8"?>
<!-- This document is part of QIF 3.0, an open, industry-wide standard -->
<!-- established by the Dimensional Metrology Standards Consortium.    -->
<!-- This document shall not be used in any manner to claim any        -->
<!-- proprietary rights to such information, such as rights to a       -->
<!-- patent, trademark, or copyright.                                  -->

<xs:schema
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns="http://qifstandards.org/xsd/qif3"
  xmlns:t="http://qifstandards.org/xsd/qif3"
  targetNamespace="http://qifstandards.org/xsd/qif3"
  elementFormDefault="qualified"
  attributeFormDefault="unqualified"
  version="3.0.0">
  
  <xs:include schemaLocation="../QIFLibrary/PrimitivesPMI.xsd"/>

  <xs:annotation>
    <xs:documentation>
      The IntermediatesPMI.xsd schema file defines types specific to
      product manufacturing information (PMI) that are used in other
      other schema files.
    </xs:documentation>
  </xs:annotation>

  <xs:complexType name="SequencedDatumType">
    <xs:annotation>
      <xs:documentation>
        The SequencedDatumType defines a datum reference with a sequence
        number for ordering in a compound datum.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            This compositor provides a choice between a datum with a simple
            label and a nested compound datum label (with an optional
            reduction modifier) to handle ISO specific cases such as
            (A-B)[PT]-(C-D)[SL].
          </xs:documentation>
        </xs:annotation>
        <xs:element name="SimpleDatum"
          type="DatumType">
          <xs:annotation>
            <xs:documentation>
              The Datum element is a simple datum with an assigned label.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="CompoundDatum"
          type="CompoundDatumType">
          <xs:annotation>
            <xs:documentation>
              (ISO specific) The CompoundDatum element is a nested compound
              datum.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="SequenceNumber"
        type="NaturalType">
        <xs:annotation>
          <xs:documentation>
            The SequenceNumber element is the sequence number of the datum
            in a compound datum. The sequence numbers in an ordered set of
            datums should be assigned 1, 2, 3, ...
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CompoundDatumType">
    <xs:annotation>
      <xs:documentation>
        The CompoundDatumType defines a compound datum specified by two or
        more datums with assigned labels.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Datum"
        type="SequencedDatumType"
        minOccurs="2"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each Datum element gives a datum with assigned datum labels. At
            least two datums are required, and there is no maximum number.
            The sequence number is used to order the datums in the compound
            datum.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ReducedDatum"
        type="ReducedDatumEnumType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (ISO specific PT,SL,PL) The optional ReducedDatum element
            specifies that the compound datum is reduced to a simpler
            type to handle a case like (A-B)[PT].
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of datums in the compound
          datum.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="DatumWithPrecedenceType">
    <xs:annotation>
      <xs:documentation>
        The DatumWithPrecedenceType defines a datum reference with
        precedence in a feature control frame.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:element name="SimpleDatum"
          type="DatumType">
          <xs:annotation>
            <xs:documentation>
              The Datum element is a simple datum with an assigned label.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="NominalDatumFeature"
          type="NominalDatumFeatureType">
          <xs:annotation>
            <xs:documentation>
              The NominalDatumFeature element is a feature used as a datum
              without an assigned datum label. The nominal feature is used
              to establish the datum feature.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="MeasuredDatumFeature"
          type="MeasuredDatumFeatureType">
          <xs:annotation>
            <xs:documentation>
              The MeasuredDatumFeature element is a feature used as a datum
              without an assigned datum label. The measured feature is used
              to establish the datum feature.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="CompoundDatum"
          type="CompoundDatumType">
          <xs:annotation>
            <xs:documentation>
              The CompoundDatum element is a compound datum with assigned
              labels separated by dashes.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Precedence"
        type="PrecedenceType">
        <xs:annotation>
          <xs:documentation>
            The Precedence element is the precedence of the datum. It is
            the order in the feature control frame of the datum with
            respect to other datums, or the order of the datum in a
            compound datum with respect to other datums.
          </xs:documentation>
          <xs:documentation>
            In any feature control frame or compound datum, no two datums
            may have the same precedence, and there may be no gaps in the
            precedences (for example, a QUATERNARY precedence may not be
            assigned unless PRIMARY, SECONDARY, and TERTIARY are also
            assigned).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DatumType">
    <xs:annotation>
      <xs:documentation>
        The DatumType defines a simple datum reference for use in a feature
        control frame.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DatumDefinitionId"
        type="QIFReferenceFullType">
        <xs:annotation>
          <xs:documentation>
            The DatumDefinitionId element is the QIF id of a datum
            definition type. A datum definition type assigns a datum label
            and can associate a feature with that datum label.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MaterialModifier"
        type="MaterialModifierEnumType">
        <xs:annotation>
          <xs:documentation>
            The MaterialModifier element is the material condition or
            material boundary modifier for the datum in a feature control
            frame.
          </xs:documentation>
          <xs:documentation>
            ASME Y14.5 - 2009 Sections 1.3.38, 1.3.39, 3.4
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SizeCharacteristicDefinitionId"
        type="QIFReferenceType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional SizeCharacteristicDefinitionId element is the QIF
            id of the associated datum feature size characteristic used to
            derive bonus mobility for maximum and least material boundary
            conditions.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ReferencedComponent"
        type="ReferencedComponentEnumType">
        <xs:annotation>
          <xs:documentation>
            The ReferencedComponent element identifies whether the datum is
            established from the measured feature or the nominal feature.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SubstituteFeatureAlgorithm"
        type="SubstituteFeatureAlgorithmType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional SubstituteFeatureAlgorithm element is the
            substitute feature data fitting algorithm for the datum. This
            setting overrides any substitute feature algorithm defined on
            the datum feature nominal or datum feature item for the purpose
            of establishing a datum reference frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DatumFeatureSimulatorModifier"
        type="DatumFeatureSimulatorModifierType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional DatumFeatureSimulatorModifier element is the datum
            feature simulator size modifier found in a datum reference
            frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DatumTranslation"
        type="DatumTranslationType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional DatumTranslation element specifies whether datum
            translation is allowed as indicated by the datum translation
            symbol found in a datum reference frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DegreesOfFreedom"
        type="DegreesOfFreedomType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional DegreesOfFreedom element gives the degrees of
            freedom controlled by the datum.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ProjectedDatum"
        type="LinearValueType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (ISO specific (P)) The optional ProjectedDatum element gives
            the distance a datum feature is projected in a feature control
            frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DiameterModifier"
        type="DiameterModifierEnumType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (ISO specific PD,MD,LD) The optional DiameterModifier element
            is the diameter modifier for a threaded datum feature in a
            feature control frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SectionModifier"
        type="SectionModifierEnumType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (ISO specific ACS,SCS,ALS) The optional SectionModifier element
            is the cross section modifier for a datum feature in a feature
            control frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ContactingFeature"
        type="xs:boolean"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (ISO specific CF) The optional ContactingFeature element when
            present and set to true indicates that the measured datum
            feature comes into contact with a nominal datum feature of a
            different type.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DistanceVariable"
        type="xs:boolean"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (ISO specific DV) The optional DistanceVariable element when
            present and set to true indicates that the datum has a variable
            distance.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DatumFixed"
        type="xs:boolean"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (ISO specific DF) The optional DatumFixed element when present
            and set to true indicates that the datum location has been
            fixed by higher precedence datums.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ReducedDatum"
        type="ReducedDatumEnumType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (ISO specific PT,SL,PL) The optional ReducedDatum element
            specifies that the datum feature is reduced to a simpler type.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ConstrainOrientation"
        type="xs:boolean"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (ISO specific greaterthan/lessthan) The optional
            ConstrainOrientation element if present and set to true
            specifies that this datum constrains only the orientation of
            subsequent datums and the feature control frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ConstrainSubsequent"
        type="xs:boolean"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (ISO specific lessthan/greaterthan) The optional
            ConstrainSubsequent element if present and set to true
            specifies that this datum constrains only subsequent datums and
            not the feature control frame itself.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DatumTranslationType">
    <xs:annotation>
      <xs:documentation>
        The DatumTranslationType defines whether a datum can translate and
        therefore act as an aligning datum rather than a clocking datum.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DatumTranslationAllowed"
        type="xs:boolean">
        <xs:annotation>
          <xs:documentation>
            The DatumTranslationAllowed element indicates if the datum is
            an aligning datum ("true") rather than the default clocking
            datum ("false").
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DatumFeatureBaseType"
    abstract="true">
    <xs:annotation>
      <xs:documentation>
        The DatumFeatureBaseType is the abstract base type that defines a
        component of a datum reference frame (i.e., one of the boxes on the
        right side of a feature control frame) when that component uses a
        datum feature without an assigned datum label.
      </xs:documentation>
      <xs:documentation>
        The DatumFeatureType exists for DMIS harmonization.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="FeatureNominalId"
        type="QIFReferenceFullType">
        <xs:annotation>
          <xs:documentation>
            The FeatureNominalId element is the QIF id of the feature
            nominal of the datum feature.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MeasuredDatumFeatureType">
    <xs:annotation>
      <xs:documentation>
        The MeasuredDatumFeatureType defines a DatumFeatureBaseType in which
        the datum feature is to be established from the measured feature.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="DatumFeatureBaseType">
        <xs:sequence>
          <xs:element name="MaterialModifier"
            type="MaterialModifierEnumType">
            <xs:annotation>
              <xs:documentation>
                The MaterialModifier element is the material condition or
                material boundary modifier for the datum feature.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SubstituteFeatureAlgorithm"
            type="SubstituteFeatureAlgorithmType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional SubstituteFeatureAlgorithm element is the
                substitute feature data fitting algorithm for the datum
                feature. This setting overrides any substitute feature
                algorithm defined on the datum feature nominal or datum
                feature item for the purpose of establishing a datum
                reference frame.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NominalDatumFeatureType">
    <xs:annotation>
      <xs:documentation>
        The NominalDatumFeatureType defines a DatumFeatureBaseType in which
        the datum feature is to be established from the nominal feature.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="DatumFeatureBaseType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DatumFeatureSimulatorModifierType">
    <xs:annotation>
      <xs:documentation>
        The DatumFeatureSimulatorModifierType defines a datum feature
        simulator size modifier like that found in square brackets in a
        datum reference frame.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="LinearSize"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The LinearSize element is the linear size of the datum feature
            simulator size modifier in a datum reference frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DiametricalSize"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The DiametricalSize element is the diameter of the datum
            feature simulator size modifier in a datum reference frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BasicSize"
        type="xs:token"
        fixed="BASIC">
        <xs:annotation>
          <xs:documentation>
            The BasicSize element signifies that the size of the datum
            feature simulator is to be its basic size as indicated by
            [BASIC] or [BSC] in the datum reference frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="DatumsType">
    <xs:annotation>
      <xs:documentation>
        The DatumsType defines the list of datums in the datum reference
        component of a feature control frame. Each of the up to five parts
        of the datum reference component represents the contents of a box
        on the right side of the feature control frame.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Datum"
        type="DatumWithPrecedenceType"
        maxOccurs="5">
        <xs:annotation>
          <xs:documentation>
            Each Datum element is a datum (simple, compound, or datum
            feature) with an assigned precedence (order).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of datums in the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="DatumReferenceFrameType">
    <xs:annotation>
      <xs:documentation>
        The DatumReferenceFrameType defines the datum reference component
        of a feature control frame. If no datums are referenced by a
        feature control frame (such as in a 'to itself' profile or position
        characteristic or in the lowermost segment of a composite profile
        or position) then a datum reference frame can still be needed but
        it contains no datums. Such a datum reference frame indicates that
        all 6 degrees of freedom are available unconstrained by datum
        features.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Datums"
        type="DatumsType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Datums element is a list of datums (simple,
            compound, or datum feature) with an assigned precedence
            (order).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Name"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Name element is the name of the datum reference
            frame, e.g. ABC, STARTUP, AD(m)E(m).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Description"
        type="xs:string"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Description element is a description of the datum
            reference frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CoordinateSystemId"
        type="QIFReferenceFullType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional CoordinateSystemId element is the QIF id of the
            coordinate system in which the characteristic is evaluated.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the datum reference frame, used
          for referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:simpleType name="DegreeOfFreedomEnumType">
    <xs:annotation>
      <xs:documentation>
        The DegreeOfFreedomEnumType enumerates values that describe a
        degree of freedom of a datum as specified by degrees of freedom
        modifiers found in a feature control frame, e.g., [Au,v,z|Bx,y|Cw].
      </xs:documentation>
      <xs:documentation>
        ASME Y14.5 - 2009 Section 4.2 and Figure 4-1
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="U"/>
      <xs:enumeration value="V"/>
      <xs:enumeration value="W"/>
      <xs:enumeration value="X"/>
      <xs:enumeration value="Y"/>
      <xs:enumeration value="Z"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ISODegreeOfFreedomEnumType">
    <xs:annotation>
      <xs:documentation>
        (ISO specific) The ISODegreeOfFreedomEnumType enumerates values
        that describe a degree of freedom of a datum as specified by
        degrees of freedom modifiers found in a feature control frame.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="Rx"/>
      <xs:enumeration value="Ry"/>
      <xs:enumeration value="Rz"/>
      <xs:enumeration value="Tx"/>
      <xs:enumeration value="Ty"/>
      <xs:enumeration value="Tz"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="IntersectionPlaneEnumType">
    <xs:annotation>
      <xs:documentation>
        (ISO specific) The IntersectionPlaneEnumType enumerates values
        that describe the how the intersection plane is derived.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="PARALLEL"/>
      <xs:enumeration value="PERPENDICULAR"/>
      <xs:enumeration value="INCLUDING"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="IntersectionPlaneType">
    <xs:annotation>
      <xs:documentation>
        (ISO specific) The IntersectionPlaneType defines an intersection
        plane feature control frame modifier.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="IntersectionPlaneEnum"
        type="IntersectionPlaneEnumType">
        <xs:annotation>
          <xs:documentation>
            The IntersectionPlaneEnum element specifies how the
            intersection plane is derived from the datum.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DatumDefinitionId"
        type="QIFReferenceFullType">
        <xs:annotation>
          <xs:documentation>
            The DatumDefinitionId element identifies the datum from which
            the intersection plane is derived.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="ModifyingPlaneEnumType">
    <xs:annotation>
      <xs:documentation>
        (ISO specific) The ModifyingPlaneEnumType enumerates values that
        describe the modifying plane.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="PARALLEL"/>
      <xs:enumeration value="PERPENDICULAR"/>
      <xs:enumeration value="INCLINED"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="DirectionFeatureType">
    <xs:annotation>
      <xs:documentation>
        (ISO specific) The DirectionFeatureType defines a direction-feature
        feature control frame modifier.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DirectionFeatureEnum"
        type="ModifyingPlaneEnumType">
        <xs:annotation>
          <xs:documentation>
            The DirectionFeatureEnum element specifies how the direction is
            derived from the datum.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DatumDefinitionId"
        type="QIFReferenceFullType">
        <xs:annotation>
          <xs:documentation>
            The DatumDefinitionId element identifies the datum from which
            the direction feature is derived.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CollectionPlaneType">
    <xs:annotation>
      <xs:documentation>
        (ISO specific) The CollectionPlaneType defines a collection
        plane feature control frame modifier.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="CollectionPlaneEnum"
        type="ModifyingPlaneEnumType">
        <xs:annotation>
          <xs:documentation>
            The CollectionPlaneEnum element specifies how the collection
            plane is derived from the datum.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DatumDefinitionId"
        type="QIFReferenceFullType">
        <xs:annotation>
          <xs:documentation>
            The DatumDefinitionId element identifies the datum from which
            the collection plane is derived.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="OrientationPlaneType">
    <xs:annotation>
      <xs:documentation>
        (ISO specific) The OrientationPlaneType defines an orientation
        plane feature control frame modifier.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="OrientationPlaneEnum"
        type="ModifyingPlaneEnumType">
        <xs:annotation>
          <xs:documentation>
            The OrientationPlaneEnum element specifies how the orientation
            plane is derived from the datum.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DatumDefinitionId"
        type="QIFReferenceFullType">
        <xs:annotation>
          <xs:documentation>
            The DatumDefinitionId element identifies the datum from which
            the orientation plane is derived.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="ReducedDatumEnumType">
    <xs:annotation>
      <xs:documentation>
        (ISO specific) The ReducedDatumEnumType enumerates values
        that describe the reduction of a datum feature to a simpler
        type, e.g. a sphere to a point (PT), a cone to a straight line
        (SL), an opposite parallel planes feature to a plane (PL), etc.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="PT"/>
      <xs:enumeration value="SL"/>
      <xs:enumeration value="PL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="DegreesOfFreedomType">
    <xs:annotation>
      <xs:documentation>
        The DegreesOfFreedomType defines the degrees of freedom available
        for fitting or controlled by a datum reference frame (DRF = datum
        reference frame).
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            This compositor provides a choice between the ASME Y14.5 and
            ISO 1101 implementations of datum degrees of freedom.
          </xs:documentation>
        </xs:annotation>
        <xs:element name="DegreeOfFreedom"
          type="DegreeOfFreedomEnumType"
          maxOccurs="6">
          <xs:annotation>
            <xs:documentation>
              Each DegreeOfFreedom element specifies which degree of
              freedom is controlled.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="ISODegreeOfFreedom"
          type="ISODegreeOfFreedomEnumType"
          maxOccurs="6">
          <xs:annotation>
            <xs:documentation>
              (ISO specific Rx,Ry,Rz,Tx,Ty,Tz) Each ISODegreeOfFreedom
              element specifies which degree of freedom is controlled.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of degrees of freedom
          available for fitting.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:simpleType name="DiameterModifierEnumType">
    <xs:annotation>
      <xs:documentation>
        (ISO specific) The DiameterModifierEnumType enumerates values
        that describe diameter modifiers for threaded datum features.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="PD"/>
      <xs:enumeration value="MD"/>
      <xs:enumeration value="LD"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SectionModifierEnumType">
    <xs:annotation>
      <xs:documentation>
        (ISO specific) The SectionModifierEnumType enumerates values
        that establish datums or features section by section:
        
          ACS = any cross section
          ALS = any longitudinal section.
          SCS = specific fixed cross section
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="ACS"/>
      <xs:enumeration value="ALS"/>
      <xs:enumeration value="SCS"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="PointWithNormalBaseType"
    abstract="true">
    <xs:annotation>
      <xs:documentation>
        The abstract PointWithNormalBaseType is the base type for
        measurement and point-defined-feature points. The direction of the
        optional normal vector is away from the material.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Point"
        type="PointType">
        <xs:annotation>
          <xs:documentation>
            The Point element is the location of the individual point.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Normal"
        type="UnitVectorType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Normal element is the unit vector normal to the
            material at the locating point.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the point with normal, used for
          referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="MeasuredPointWithNormalBaseType"
    abstract="true">
    <xs:annotation>
      <xs:documentation>
        The abstract MeasuredPointWithNormalBaseType is the base type for
        the results of measurement and measured point-defined-feature
        points. The direction of the optional normal vector is away from
        the material.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Point"
        type="MeasuredPointType">
        <xs:annotation>
          <xs:documentation>
            The Point element is the location of the individual point.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Normal"
        type="MeasuredUnitVectorType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Normal element is the unit vector normal to the
            material at the locating point.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the point, used for
          referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="MeasurePointNominalType">
    <xs:annotation>
      <xs:documentation>
        The MeasurePointNominalType defines a nominal measure point. In a
        MeasurePointNominalType, the inherited Point element is the
        location of a point at which a measurement is to be taken, and the
        inherited Normal element is a vector pointing opposite an intended
        approach direction for measurement.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="PointWithNormalBaseType">
        <xs:sequence>
          <xs:element name="MeasurementDeviceId"
            type="QIFReferenceType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MeasurementDeviceId element is the QIF id of
                the measurement device to be used to measure the point.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SensorId"
            type="QIFReferenceType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional SensorId element is the QIF id of the sensor
                (e.g., tactile probe) to be used to measure the point.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TipId"
            type="QIFReferenceType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional TipId element is the QIF id of the tip of a
                complex tactile probe to be used to measure the point. This
                must be the id of a ProbeTipType object.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MovableDatumTargetDirectionType">
    <xs:annotation>
      <xs:documentation>
        The MovableDatumTargetDirectionType defines the direction in which
        a datum target can move.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DatumTargetTranslationDirection"
        type="UnitVectorType">
        <xs:annotation>
          <xs:documentation>
            The DatumTargetTranslationDirection element is the vector
            direction in which the datum target can translate when a datum
            target is allowed to move in order to stabilize a datum
            reference frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DefiningPointNominalType">
    <xs:annotation>
      <xs:documentation>
        The DefiningPointNominalType defines a nominal feature defining
        point. Each nominal defining point has a sequence number used both
        to order the nominal defining points, and to provide a reference
        for corresponding measured defining points.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="PointWithNormalBaseType">
        <xs:sequence>
          <xs:element name="SequenceNumber"
            type="NaturalType">
            <xs:annotation>
              <xs:documentation>
                The SequenceNumber element is an ordinal number defining the
                order of the nominal feature defining points.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DefiningPointMeasurementType">
    <xs:annotation>
      <xs:documentation>
        The DefiningPointMeasurementType defines a measured feature
        defining point. The sequence number of each
        DefiningPointMeasurementType corresponds to the sequence number of
        a DefiningPointNominalType. It is possible that a nominal feature
        defining point may not have a corresponding measured feature
        defining point but each measured feature defining point must have a
        corresponding nominal feature defining point.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="MeasuredPointWithNormalBaseType">
        <xs:sequence>
          <xs:element name="SequenceNumber"
            type="NaturalType">
            <xs:annotation>
              <xs:documentation>
                The SequenceNumber element is an ordinal number referencing
                the sequence number of the corresponding nominal feature
                defining point.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="TransformListType">
    <xs:annotation>
      <xs:documentation>
        The TransformListType defines a list of one or more transforms.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Transform"
        type="TransformInstanceType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each Transform element is a transform in the list.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of transforms in the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="Transforms"
    type="TransformListType">
    <xs:annotation>
      <xs:documentation>
        The global Transforms element is a list of transforms.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="TransformInstanceType">
    <xs:annotation>
      <xs:documentation>
        The TransformInstanceType defines a transform matrix that can be
        referenced via its QIF id.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="TransformMatrixType">
        <xs:sequence>
          <xs:element ref="Attributes"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional Attributes element contains user defined
                attributes (typified, binary array, or XML structured).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Name"
            type="xs:token"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional Name element is the name of the transform.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="id"
          type="QIFIdType"
          use="required">
          <xs:annotation>
            <xs:documentation>
              The id attribute is the QIF id of the transform, used for
              referencing.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="LinearCoordinateDirectionEnumType">
    <xs:annotation>
      <xs:documentation>
        The LinearCoordinateDirectionEnumType enumerates values that
        describe the direction for a linear coordinate characteristic.
          XAXIS and YAXIS are used with a 2D Cartesian coordinate system.
          RADIAL and ANGULAR are used with a 2D Polar coordinate system.
          XAXIS, YAXIS, and ZAXIS are used with a 3D Cartesian coordinate
            system.
          RADIAL, AZIMUTH, and ZAXIS are used with a 3D Cylindrical
            coordinate system.
          RADIAL, POLAR, and AZIMUTH are used with a 3D Spherical
            coordinate system.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="XAXIS"/>
      <xs:enumeration value="YAXIS"/>
      <xs:enumeration value="ZAXIS"/>
      <xs:enumeration value="RADIAL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="AngularCoordinateDirectionEnumType">
    <xs:annotation>
      <xs:documentation>
        The AngularCoordinateDirectionEnumType enumerates values that
        describe the direction for an angular coordinate characteristic.
        (See LinearCoordinateDirectionEnumType for usage guidelines.)
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="ANGULAR"/>
      <xs:enumeration value="AZIMUTH"/>
      <xs:enumeration value="POLAR"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SubstituteFeatureAlgorithmEnumType">
    <xs:annotation>
      <xs:documentation>
        The SubstituteFeatureAlgorithmEnumType enumerates values that
        describe the type of algorithm used to determine the substitute
        feature.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="BEZIER"/>
      <xs:enumeration value="BSPLINE"/>
      <xs:enumeration value="DEFAULT"/>
      <xs:enumeration value="LEASTSQUARES"/>
      <xs:enumeration value="MAXINSCRIBED"/>
      <xs:enumeration value="MAXINNERLOCALSIZE"/>
      <xs:enumeration value="MAXOUTERLOCALSIZE"/>
      <xs:enumeration value="MINCIRCUMSCRIBED"/>
      <xs:enumeration value="MININNERLOCALSIZE"/>
      <xs:enumeration value="MINOUTERLOCALSIZE"/>
      <xs:enumeration value="MINMAX"/>
      <xs:enumeration value="NURBS"/>
      <xs:enumeration value="ONESIDED"/>
      <xs:enumeration value="UNDEFINED"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="SubstituteFeatureAlgorithmType">
    <xs:annotation>
      <xs:documentation>
        The SubstituteFeatureAlgorithmType defines the type of algorithm
        used to determine the substitute feature
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:element name="SubstituteFeatureAlgorithmEnum"
          type="SubstituteFeatureAlgorithmEnumType">
          <xs:annotation>
            <xs:documentation>
              The SubstituteFeatureAlgorithmEnum element describes an
              often-used type of algorithm used to determine the substitute
              feature.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="SubstituteFeatureAlgorithmId"
          type="QIFReferenceType">
          <xs:annotation>
            <xs:documentation>
              The SubstituteFeatureAlgorithmId element is the id of an
              algorithm definition.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OtherSubstituteFeatureAlgorithm"
          type="xs:string">
          <xs:annotation>
            <xs:documentation>
              The OtherSubstituteFeatureAlgorithm element
              describes the type of algorithm used to determine the
              substitute feature in natural language.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="MaterialModifierEnumType">
    <xs:annotation>
      <xs:documentation>
        The MaterialModifierEnumType enumerates values that describe a
        material condition or material boundary modifier for a tolerance
        zone or a datum reference.
      </xs:documentation>
      <xs:documentation>
        ASME Y14.5 - 2009 Sections 1.3.38, 1.3.39, 1.3.48
      </xs:documentation>
      <xs:documentation>
        ISO 2692 specific: LEAST_RPR and MAXIMUM_RPR represent the least
        and maximum material symbols respectively when appended with the
        reciprocity requirement symbol, i.e., (L)(R) and (M)(R).
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="REGARDLESS"/>
      <xs:enumeration value="LEAST"/>
      <xs:enumeration value="MAXIMUM"/>
      <xs:enumeration value="LEAST_RPR"/>
      <xs:enumeration value="MAXIMUM_RPR"/>
      <xs:enumeration value="NONE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="PrecedenceEnumType">
    <xs:annotation>
      <xs:documentation>
        The PrecedenceEnumType enumerates values that describe the
        precedence of a datum in a feature control frame or compound datum.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="PRIMARY"/>
      <xs:enumeration value="SECONDARY"/>
      <xs:enumeration value="TERTIARY"/>
      <xs:enumeration value="QUATERNARY"/>
      <xs:enumeration value="QUINARY"/>
      <xs:enumeration value="SENARY"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="PrecedenceType">
    <xs:annotation>
      <xs:documentation>
        The PrecedenceType defines the precedence of a datum in a feature
        control frame or compound datum.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="PrecedenceEnum"
        type="PrecedenceEnumType">
        <xs:annotation>
          <xs:documentation>
            The PrecedenceEnum element describes an often-used precedence
            of a datum in a feature control frame or compound datum.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OtherPrecedence"
        type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The OtherPrecedence element describes the precedence of a datum
            in a feature control frame or compound datum in natural
            language.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:simpleType name="ReferencedComponentEnumType">
    <xs:annotation>
      <xs:documentation>
        The ReferencedComponentEnumType enumerates values that describe
        whether the nominal or measured component of a feature or coordinate
        system is used in a construction, characteristic or datum
        reference.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="NOMINAL"/>
      <xs:enumeration value="ACTUAL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="RetrievalMethodEnumType">
    <xs:annotation>
      <xs:documentation>
        The RetrievalMethodEnumType enumerates values that describe methods
        of retrieving a single point from a set of points in a cylindrical
        acceptance window.
          AVERAGE will average all points within the window.
          MAXEXTREME will retrieve the single point furthest in the
            direction of the cylinder's axis.
          MINEXTREME will retrieve the single point furthest against the
            direction of the cylinder's axis,
          CLOSEST1D will retrieve the single point closest to the cylinder
            center point along the cylinder's axis without regard to the
            perpendicular distance from the cylinder's axis.
          CLOSEST2D will retrieve the single point closest to the
            cylinder's axis without regard to the distance up or down the
            axis from the cylinder center point.
          CLOSEST3D will retrieve the single point closest to the
            cylinder's center point in three dimensions.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="AVERAGE"/>
      <xs:enumeration value="MAXEXTREME"/>
      <xs:enumeration value="MINEXTREME"/>
      <xs:enumeration value="CLOSEST1D"/>
      <xs:enumeration value="CLOSEST2D"/>
      <xs:enumeration value="CLOSEST3D"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="MeasurementDirectiveEnumType">
    <xs:annotation>
      <xs:documentation>
        The MeasurementDirectiveEnumType enumerates values that describe
        the method of measurement between two features.
          MINIMUM = use minimum distance,
          MAXIMUM = use maximum distance,
          AVERAGE = use average distance,
          UNDEFINED = No specific method is required. Use any appropriate
            method.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="MINIMUM"/>
      <xs:enumeration value="MAXIMUM"/>
      <xs:enumeration value="AVERAGE"/>
      <xs:enumeration value="UNDEFINED"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="MeasurementDirectiveType">
    <xs:annotation>
      <xs:documentation>
        The MeasurementDirectiveType defines the method of measurement
        between two features.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="MeasurementDirectiveEnum"
        type="MeasurementDirectiveEnumType">
        <xs:annotation>
          <xs:documentation>
            The MeasurementDirectiveEnum element describes an often-used
            method of measurement between two features.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OtherMeasurementDirective"
        type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The OtherMeasurementDirective element describes the method of
            measurement between two features in natural language.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:simpleType name="DistanceBetweenAnalysisModeEnumType">
    <xs:annotation>
      <xs:documentation>
        The DistanceBetweenAnalysisModeEnumType enumerates values that
        describe the analysis mode for a distance between characteristic.
          ONEDIMENSIONAL = evaluation is along an axis defined by a vector.
          TWODIMENSIONAL = evaluation is in a plane perpendicular to a
            vector.
          THREEDIMENSIONAL = a point to point evaluation not requiring
            a vector.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="ONEDIMENSIONAL"/>
      <xs:enumeration value="TWODIMENSIONAL"/>
      <xs:enumeration value="THREEDIMENSIONAL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="AngleBetweenAnalysisModeEnumType">
    <xs:annotation>
      <xs:documentation>
        The AngleBetweenAnalysisModeEnumType enumerates values that
        describe the analysis mode for an angle between characteristic.
          TWODIMENSIONAL = evaluation is in a plane perpendicular to
            a vector.
          THREEDIMENSIONAL = evaluation is in three dimensional space not
            requiring a vector.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="TWODIMENSIONAL"/>
      <xs:enumeration value="THREEDIMENSIONAL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="BaseFeatureType">
    <xs:annotation>
      <xs:documentation>
        The BaseFeatureType defines a feature used in a construction or
        alignment.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ReferencedComponent"
        type="ReferencedComponentEnumType">
        <xs:annotation>
          <xs:documentation>
            The ReferencedComponent element identifies whether the measured
            or nominal component of this feature is used in the
            construction or alignment.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FeatureId"
        type="QIFReferenceFullType">
        <xs:annotation>
          <xs:documentation>
            The FeatureId element is the QIF id of a feature nominal in the
            case where a construction is defined at the feature nominal
            level, or the QIF id of a feature item in the case where a
            construction is defined at the feature item level. The allowed
            values of FeatureId are restricted by key/keyref pairs.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SequencedBaseFeatureType">
    <xs:annotation>
      <xs:documentation>
        The SequencedBaseFeatureType defines a feature that is one of a set
        of features used in a construction or alignment.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFeatureType">
        <xs:sequence>
          <xs:element name="SequenceNumber"
            type="NaturalType">
            <xs:annotation>
              <xs:documentation>
                The SequenceNumber element is an ordinal number specifying
                the order of the base feature in the construction or
                alignment.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DirectionalOffsetType">
    <xs:annotation>
      <xs:documentation>
        The DirectionalOffsetType defines an offset or displacement in a
        specified direction.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Offset"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The Offset element is offset in the specified direction, a
            positive value will offset in the specified direction and a
            negative value will offset opposite the specified direction.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:element name="NominalDirection"
          type="UnitVectorType">
          <xs:annotation>
            <xs:documentation>
              The NominalDirection element specifies the offset direction
              as a nominal unit vector.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="FeatureDirection"
          type="BaseFeatureType">
          <xs:annotation>
            <xs:documentation>
              The FeatureDirection element specifies the offset direction
              as a feature's vector, either nominal or measured depending on
              the value of ReferencedComponent.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AlignmentFeatureType">
    <xs:annotation>
      <xs:documentation>
        The AlignmentFeatureType defines a reference to an alignment
        feature, either a datum or a feature item.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:element name="DatumDefinitionId"
          type="QIFReferenceFullType">
          <xs:annotation>
            <xs:documentation>
              The DatumDefinitionId element is the QIF id of the datum
              definition used in the alignment operation.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="BaseFeature"
          type="BaseFeatureType">
          <xs:annotation>
            <xs:documentation>
              The BaseFeature element is the feature used in an alignment
              operation.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AlignmentOperationBaseType"
    abstract="true">
    <xs:annotation>
      <xs:documentation>
        The AlignmentOperationBaseType is the abstract base type that
        defines a coordinate system alignment operation with a sequence
        number for ordering. Each alignment operation takes place in the
        current coordinate system, which is established as follows.
          1. If a previous alignment operation exists, the current
             coordinate system is the coordinate system established by the
             previous alignment operation.
          2. Otherwise, if the base coordinate system is defined, the
             current coordinate system is the base coordinate system.
          3. Otherwise, the current coordinate system is the common
             coordinate system.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="SequenceNumber"
        type="NaturalType">
        <xs:annotation>
          <xs:documentation>
            The SequenceNumber element is the sequence number of the
            alignment operation. The sequence numbers in an ordered set of
            alignment operations should be assigned 1, 2, 3, ...
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PrimaryAlignmentOperationType">
    <xs:annotation>
      <xs:documentation>
        The PrimaryAlignmentOperationType defines information particular to
        a primary alignment operation. In a primary alignment operation the
        coordinate system is aligned so that the measured feature axis or
        normal vector points exactly in the specified primary direction.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="AlignmentOperationBaseType">
        <xs:sequence>
          <xs:element name="PrimaryEntity"
            type="AlignmentFeatureType">
            <xs:annotation>
              <xs:documentation>
                The PrimaryEntity element is the feature or datum for the
                primary alignment operation. This feature or datum must
                have an axis or normal vector.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="PrimaryAxis"
            type="UnitVectorType">
            <xs:annotation>
              <xs:documentation>
                The PrimaryAxis element is the direction in which the
                primary axis points in the current coordinate system.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="SecondaryAlignmentOperationType">
    <xs:annotation>
      <xs:documentation>
        The SecondaryAlignmentOperationType defines information particular
        to a secondary alignment operation. In a secondary alignment
        operation the coordinate system is aligned so that the measured
        feature axis or normal vector points as closely as possible in the
        specified secondary direction given the constraint that the primary
        alignment axis or rotation axis remains unchanged.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="AlignmentOperationBaseType">
        <xs:sequence>
          <xs:element name="SecondaryEntity"
            type="AlignmentFeatureType">
            <xs:annotation>
              <xs:documentation>
                The SecondaryEntity element is the feature or datum for the
                secondary alignment operation. This feature or datum must
                have an axis or normal vector.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SecondaryAxis"
            type="UnitVectorType">
            <xs:annotation>
              <xs:documentation>
                The SecondaryAxis element is the direction in which the
                secondary axis points in the current coordinate system.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RotationAxis"
            type="UnitVectorType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional RotationAxis element is the direction in the
                current coordinate system about which the coordinate system
                is rotated to establish the secondary axis. If absent the
                rotation axis will be the primary axis defined in a
                previous alignment operation.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MeasurementOriginOffsetType">
    <xs:annotation>
      <xs:documentation>
        The MeasurementOriginOffsetType defines information particular to a
        measurement origin offset.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="OriginEntity"
        type="AlignmentFeatureType">
        <xs:annotation>
          <xs:documentation>
            The OriginEntity element is the feature or datum that defines
            an origin along the specified direction.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OriginDirection"
        type="UnitVectorType">
        <xs:annotation>
          <xs:documentation>
            The OriginDirection element is the direction in the current
            coordinate system in which the origin is set.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MeasurementOffsetAlignmentOperationType">
    <xs:annotation>
      <xs:documentation>
        The MeasurementOffsetAlignmentOperationType defines information
        particular to a measurement origin offset alignment operation.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="AlignmentOperationBaseType">
        <xs:sequence>
          <xs:element name="Origin"
            type="MeasurementOriginOffsetType"
            maxOccurs="3">
            <xs:annotation>
              <xs:documentation>
                Each Origin element describes one alignment feature setting
                an origin in one direction.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="n"
          type="NaturalType"
          use="required">
          <xs:annotation>
            <xs:documentation>
              The required n attribute is the number of origin offsets
              specified.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NominalOffsetAlignmentOperationType">
    <xs:annotation>
      <xs:documentation>
        The NominalOffsetAlignmentOperationType defines information
        particular to a nominal offset operation.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="AlignmentOperationBaseType">
        <xs:sequence>
          <xs:element name="Offset"
            type="VectorType">
            <xs:annotation>
              <xs:documentation>
                The Offset element is the XYZ offset in the current
                coordinate system.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NominalRotationAlignmentOperationType">
    <xs:annotation>
      <xs:documentation>
        The NominalRotationAlignmentOperationType defines information
        particular to a nominal rotation alignment operation.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="AlignmentOperationBaseType">
        <xs:sequence>
          <xs:element name="RotationAxis"
            type="UnitVectorType">
            <xs:annotation>
              <xs:documentation>
                The RotationAxis element is the direction in the current
                coordinate system about which the coordinate system is
                rotated.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Angle"
            type="AngularValueType">
            <xs:annotation>
              <xs:documentation>
                The Angle element is the angle through which the coordinate
                system is rotated. A positive angle represents a
                right-handed rotation about the rotation axis.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DatumPrecedenceAlignmentOperationType">
    <xs:annotation>
      <xs:documentation>
        The DatumPrecedenceAlignmentOperationType defines information
        particular to a datum reference frame alignment operation using
        datum reference frame precedence and degrees of freedom rules.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="AlignmentOperationBaseType">
        <xs:sequence>
          <xs:element name="DatumReferenceFrameId"
            type="QIFReferenceFullType">
            <xs:annotation>
              <xs:documentation>
                The DatumReferenceFrameId element is the QIF id of the
                datum reference frame used in the alignment operation.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="PrimaryAxis"
            type="UnitVectorType">
            <xs:annotation>
              <xs:documentation>
                The PrimaryAxis element is the direction in which the
                primary axis points in the current coordinate system, the
                direction defined by the axis or normal of the primary
                datum.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SecondaryAxis"
            type="UnitVectorType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional SecondaryAxis element is the direction in
                which the secondary axis points in the current coordinate
                system, the direction defined by the axis, normal, or
                relative location of the secondary datum if present in the
                datum reference frame.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="BestFitAlignmentOperationType">
    <xs:annotation>
      <xs:documentation>
        The BestFitAlignmentOperationType defines information particular to
        a best fit alignment operation.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="AlignmentOperationBaseType">
        <xs:sequence>
          <xs:element name="DegreesOfFreedom"
            type="DegreesOfFreedomType">
            <xs:annotation>
              <xs:documentation>
                The DegreesOfFreedom element is the degrees of freedom for
                the best-fit alignment operation.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="BaseFeature"
            type="SequencedBaseFeatureType"
            maxOccurs="unbounded">
            <xs:annotation>
              <xs:documentation>
                Each BaseFeature element is a base feature used in the best
                fit alignment. The number and placement of base features
                must be sufficient to control all degrees of freedom.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="n"
          type="NaturalType"
          use="required">
          <xs:annotation>
            <xs:documentation>
              The required n attribute is the number of base features used
              in the alignment.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MachineCoordinateSystemOperationType">
    <xs:annotation>
      <xs:documentation>
        The MachineCoordinateSystemOperationType defines a switch to
        machine coordinate system operation.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="AlignmentOperationBaseType"/>
    </xs:complexContent>
  </xs:complexType>

<!-- BEGIN SUBSTITUTION GROUP FOR ALIGNMENT OPERATIONS -->

  <xs:element name="AlignmentOperation"
    type="AlignmentOperationBaseType"
    abstract="true">
    <xs:annotation>
      <xs:documentation>
        The global AlignmentOperation element is the head of a substitution
        group. Any element that is a member of the group may be substituted
        for the AlignmentOperation element anywhere the AlignmentOperation
        element may be used in an instance file.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="PrimaryAlignment"
    type="PrimaryAlignmentOperationType"
    substitutionGroup="AlignmentOperation">
    <xs:annotation>
      <xs:documentation>
        The global PrimaryAlignment element gives information about a
        primary alignment operation.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="SecondaryAlignment"
    type="SecondaryAlignmentOperationType"
    substitutionGroup="AlignmentOperation">
    <xs:annotation>
      <xs:documentation>
        The global SecondaryAlignment element gives information about a
        secondary alignment operation.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="MeasurementOffset"
    type="MeasurementOffsetAlignmentOperationType"
    substitutionGroup="AlignmentOperation">
    <xs:annotation>
      <xs:documentation>
        The global MeasurementOffset element gives information about a
        measurement offset alignment operation.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="NominalOffset"
    type="NominalOffsetAlignmentOperationType"
    substitutionGroup="AlignmentOperation">
    <xs:annotation>
      <xs:documentation>
        The global NominalOffset element gives information about a nominal
        offset alignment operation.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="NominalRotation"
    type="NominalRotationAlignmentOperationType"
    substitutionGroup="AlignmentOperation">
    <xs:annotation>
      <xs:documentation>
        The global NominalRotation element gives information about a
        nominal rotation alignment operation.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="DatumPrecedence"
    type="DatumPrecedenceAlignmentOperationType"
    substitutionGroup="AlignmentOperation">
    <xs:annotation>
      <xs:documentation>
        The global DatumPrecedence element gives information about a datum
        precedence alignment operation.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="BestFit"
    type="BestFitAlignmentOperationType"
    substitutionGroup="AlignmentOperation">
    <xs:annotation>
      <xs:documentation>
        The global BestFit element gives information about a best-fit
        alignment operation.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="Machine"
    type="MachineCoordinateSystemOperationType"
    substitutionGroup="AlignmentOperation">
    <xs:annotation>
      <xs:documentation>
        The global Machine element signifies a switch to machine coordinate
        system operation.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

<!-- END SUBSTITUTION GROUP FOR DATUM TARGETS -->

  <xs:complexType name="AlignmentOperationsType">
    <xs:annotation>
      <xs:documentation>
        The AlignmentOperationsType defines a list of one or more ordered
        alignment operations.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="AlignmentOperation"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each AlignmentOperation element is an ordered alignment
            operation.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BaseCoordinateSystemId"
        type="QIFReferenceFullType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional BaseCoordinateSystemId element is the QIF id of
            the coordinate system on which the first alignment operation is
            based.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of alignment operations in
          the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="MachineCoordinateSystemType">
    <xs:annotation>
      <xs:documentation>
        The MachineCoordinateSystemType defines the id of a coordinate
        system which is a machine coordinate system and optionally the
        measurement device id associated with that machine coordinate
        system.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="CoordinateSystemId"
        type="QIFReferenceFullType">
        <xs:annotation>
          <xs:documentation>
            The CoordinateSystemId element is the QIF id of the machine
            coordinate system.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MeasurementDeviceId"
        type="QIFReferenceType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional MeasurementDeviceId element is the QIF id of
            the measurement device associated with the machine coordinate
            system.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CoordinateSystemListType">
    <xs:annotation>
      <xs:documentation>
        The CoordinateSystemListType defines a list of one or more
        coordinate systems. The one coordinate system which corresponds to
        the common coordinate system in which all characteristics,
        features, and transforms are defined can be indicated. The
        coordinate system which represents the machine coordinate system
        may also be indicated.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="CoordinateSystem"
        type="CoordinateSystemType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each CoordinateSystem element is a coordinate system in the
            list.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of coordinate systems in
          the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="CoordinateSystemsType">
    <xs:annotation>
      <xs:documentation>
        The CoordinateSystemsType defines a collection of coordinate systems
        and optionally identifies which is the common coordinate system and
        which are machine coordinate systems.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="CoordinateSystemDefinitions"
        type="CoordinateSystemListType">
        <xs:annotation>
          <xs:documentation>
            The CoordinateSystemDefinitions element is a list coordinate
            system definitions.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CommonCoordinateSystemId"
        type="QIFReferenceFullType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional CommonCoordinateSystemId element is the QIF id of
            the coordinate system which corresponds to the common
            coordinate system.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MachineCoordinateSystem"
        type="MachineCoordinateSystemType"
        minOccurs="0"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each optional MachineCoordinateSystem element is the QIF id of
            a coordinate system which corresponds to the machine
            coordinate system of a particular measurement device.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="CoordinateSystems"
    type="CoordinateSystemsType">
    <xs:annotation>
      <xs:documentation>
        The global CoordinateSystems element describes coordinate systems.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="CoordinateSystemType">
    <xs:annotation>
      <xs:documentation>
        The CoordinateSystemType defines a coordinate system by giving a
        QIF id, some notes, a name, transform matrices and the alignment
        operations used to define the coordinate system.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Name"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Name element is the name of the coordinate system.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="NominalTransform"
        type="TransformMatrixType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional NominalTransform element gives the nominal
            transformation matrix used to establish the coordinate system.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="InternalCADCoordinateSystemId"
        type="QIFReferenceFullType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional InternalCADCoordinateSystemId element identifies
            an associated coordinate system defined in an internal product
            definition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ExternalCADCoordinateSystemId"
        type="QIFReferenceFullType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional ExternalCADCoordinateSystemId element identifies
            an associated coordinate system defined in an external product
            definition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AlignmentOperations"
        type="AlignmentOperationsType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional AlignmentOperations element gives the ordered
            series of alignment operations used to establish the coordinate
            system.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SequenceNumber"
        type="NaturalType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional SequenceNumber element is the sequence number of
            the coordinate system used to order coordinate systems with the
            same name from an iterative alignment. The sequence numbers in
            an ordered set of coordinate systems should be assigned 1, 2,
            3, ...
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the coordinate system, used for
          referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="CoordinateSystemActualTransformAssociationType">
    <xs:annotation>
      <xs:documentation>
        The CoordinateSystemActualTransformAssociationType defines the id of
        an actual transform associated with a coordinate system.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ActualTransformId"
        type="QIFReferenceType">
        <xs:annotation>
          <xs:documentation>
            The ActualTransformId element references the id of the actual
            transformation matrix used to establish the coordinate system.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CoordinateSystemId"
        type="QIFReferenceFullType">
        <xs:annotation>
          <xs:documentation>
            The CoordinateSystemId element is the QIF id of the coordinate
            system to which the actual transform applies.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CoordinateSystemActualTransformAssociationsType">
    <xs:annotation>
      <xs:documentation>
        The CoordinateSystemActualTransformAssociationsType defines a list
        of coordinate system actual transform associations.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="CoordinateSystemActualTransformAssociation"
        type="CoordinateSystemActualTransformAssociationType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each CoordinateSystemActualTransformAssociation element gives
            information about a coordinate system actual transform
            association.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of coordinate system actual
          transform associations in the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="CoordinateSystemActualTransformAssociations"
    type="CoordinateSystemActualTransformAssociationsType">
    <xs:annotation>
      <xs:documentation>
        The CoordinateSystemActualTransformAssociations element is a list
        of coordinate system actual transform associations.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="ThreadSpecificationDetailedBaseType"
    abstract="true">
    <xs:annotation>
      <xs:documentation>
        The ThreadSpecificationDetailedBaseType is the abstract base type
        that defines detailed thread specifications. A detailed thread
        specification has elements defining each aspect of the thread in
        contrast to a simple thread specification string.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:annotation>
        <xs:documentation>
          For QIF 3.0, this sequence consists of the ASME Y14.6 general
          designation for a thread specification for a single lead and
          multi-lead thread. The base type includes nominal diameter,
          thread form/series (e.g., UNC, UNF), thread tolerance class
          (pitch diameter and crest diameter), whether the thread is
          left-handed or right-handed, modified thread, and length of
          engagement. Future QIF versions may include additional thread
          specification elements.
        </xs:documentation>
      </xs:annotation>
      <xs:element name="Diameter"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The Diameter element is the basic major diameter of the thread.
            Note: the screw number is not used, the decimal equivalent for
            the screw number will be used (e.g., #10 screw number is
            equivalent to .190 inch).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ThreadSeries"
        type="ThreadSeriesType">
        <xs:annotation>
          <xs:documentation>
            The ThreadSeries element is the thread series (e.g., UNC, M)
            for the thread. A thread series is sometimes called the thread
            form.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ThreadToleranceClass"
        type="ThreadClassType">
        <xs:annotation>
          <xs:documentation>
            The ThreadToleranceClass element is the thread tolerance class
            for the pitch diameter of the thread. A thread class
            designation indicates the standard grade of tolerance and
            allowance specified for a thread -- typically a numeric class
            symbol and an internal and external character (e.g., 2A, 2B,
            4h). For metric threads (e.g., M, MJ) the ThreadToleranceClass
            (e.g., 4g, 6H) indicates the combination of a tolerance grade
            (numeric) with a tolerance position (e.g., e, f, g, h, G, H)
            and specifies the allowance for the pitch diameter tolerance.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CrestDiameterToleranceClass"
        type="ThreadClassType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional CrestDiameterToleranceClass element is the thread
            tolerance class for the crest diameter of the thread. The crest
            diameter is the major or minor diameter dependent upon if the
            thread is external or internal. The diameter tolerance class
            designation (e.g., 6g) indicates the combination of a tolerance
            grade (numeric) with a tolerance position (e.g., e, f, g, h, G,
            H). It specifies the allowance for the crest diameter
            tolerance.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="LeftHanded"
        type="xs:boolean"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional LeftHanded element is a thread qualifier
            designator (e.g., LH per ASME B1.7 - Screw Threads Nomenclature
            Definitions and Letter Symbols and ASME Y14.6 - Screw Thread
            Representation) indicating a thread that is screwed in or on
            counterclockwise. If the LeftHanded element is present and set
            to "true", the thread is left handed. Otherwise, the thread is
            right handed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ModifiedThread"
        type="xs:boolean"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional ModifiedThread element is a thread modifier
            designator. If the ModifiedThread is "true", then the thread
            has a modifier designate. Otherwise, there is no modifier
            designated.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ThreadLengthEngagement"
        type="LinearValueType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional ThreadLengthEngagement element is the length of
            thread engagement for the thread. The length of thread
            engagement is the axial distance over which two mating threads,
            each having full form at both crest and root, are designated to
            engage. The length of thread engagement is designated by LE.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the thread specification, used
          for referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="SingleLeadThreadSpecificationType">
    <xs:annotation>
      <xs:documentation>
        The SingleLeadThreadSpecificationType defines information
        particular to a single lead thread.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ThreadSpecificationDetailedBaseType">
        <xs:sequence>
          <xs:annotation>
            <xs:documentation>
              For QIF 3.0, this sequence consists of the ASME Y14.6
              general designation for a thread specification for a Single
              Lead Thread. This will accommodate a single lead thread
              specification of: .250-20UNC-2A MOD. The single lead thread
              includes Thread Density (e.g., Number of Threads per Unit).
              Future QIF versions may include additional thread
              specification elements.
            </xs:documentation>
          </xs:annotation>
          <xs:element name="ThreadDensity"
            type="SpecifiedDecimalType">
            <xs:annotation>
              <xs:documentation>
                The ThreadDensity element is the thread density for the
                single thread specification. The thread density is the
                number of threads per unit length.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MultiLeadThreadSpecificationType">
    <xs:annotation>
      <xs:documentation>
        The MultiLeadThreadSpecificationType defines information particular
        to a multi-lead thread.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ThreadSpecificationDetailedBaseType">
        <xs:sequence>
          <xs:annotation>
            <xs:documentation>
              For QIF 3.0, this sequence consists of the ASME Y14.6
              general designation for a thread specification for a
              multi-lead thread. This will accommodate a multi-lead thread
              specification like: ".750-.0625P-.1875L-(3START)-UNC-EXT".
              The multi-lead thread includes thread pitch, thread lead
              distance, and thread lead starts.
            </xs:documentation>
          </xs:annotation>
          <xs:element name="ThreadPitch"
            type="LinearValueType">
            <xs:annotation>
              <xs:documentation>
                The ThreadPitch element is the thread pitch for the multi
                thread specification.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ThreadLeadDistance"
            type="LinearValueType">
            <xs:annotation>
              <xs:documentation>
                The ThreadLeadDistance element is the thread lead distance
                for the multi thread specification.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ThreadLeadStarts"
            type="NaturalType">
            <xs:annotation>
              <xs:documentation>
                The ThreadLeadStarts element is the number of thread lead
                starts for the multi thread specification.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ThreadSpecificationType">
    <xs:annotation>
      <xs:documentation>
        The ThreadSpecificationType defines the thread specification.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="SingleLeadSpecification"
        type="SingleLeadThreadSpecificationType">
        <xs:annotation>
          <xs:documentation>
            The SingleLeadSpecification element is the verbose single lead
            thread specification.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MultiLeadSpecification"
        type="MultiLeadThreadSpecificationType">
        <xs:annotation>
          <xs:documentation>
            The MultiLeadSpecification element is the verbose multi-lead
            thread specification.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TextThreadSpecification"
        type="TextThreadSpecificationType">
        <xs:annotation>
          <xs:documentation>
            The TextThreadSpecification element is a thread specification
            in natural language.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="TextThreadSpecificationType">
    <xs:annotation>
      <xs:documentation>
        The TextThreadSpecificationType defines a thread specification in
        natural language.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="TextSpecification"
        type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The TextSpecification element is the thread specification in
            natural language.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the thread specification, used
          for referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ThreadSpecificationsType">
    <xs:annotation>
      <xs:documentation>
        The ThreadSpecificationsType defines a list of thread
        specifications.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ThreadSpecification"
        type="ThreadSpecificationType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each ThreadSpecification element is a specification of a
            thread.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of thread specifications
          in the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ToleranceZonePerUnitAreaType">
    <xs:annotation>
      <xs:documentation>
        The ToleranceZonePerUnitAreaType defines a per-unit-area tolerance.
        This may be used for flatness tolerance.
      </xs:documentation>
      <xs:documentation>
        ASME Y14.5 - 2009 Section 5.4.2.2 DMIS 5.2 Section 6.199
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ToleranceValuePerUnit"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The ToleranceValuePerUnit element is the tolerance value in
            linear units to be applied on a per unit area basis.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:element name="RectangularUnitArea"
          type="RectangularUnitAreaType">
          <xs:annotation>
            <xs:documentation>
              The RectangularUnitArea element gives the length and width of
              the rectangular region over which the per-unit-area tolerance
              is applied.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="CircularUnitArea"
          type="CircularUnitAreaType">
          <xs:annotation>
            <xs:documentation>
              The CircularUnitArea element gives the diameter of the
              circular region over which the per-unit-area tolerance is
              applied.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ToleranceZonePerUnitLengthType">
    <xs:annotation>
      <xs:documentation>
        The ToleranceZonePerUnitLengthType defines a per-unit-length
        tolerance.
      </xs:documentation>
      <xs:documentation>
        ASME Y14.5 - 2009 Section 5.4.1.3, Figure 5-4, Figure 5-5
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ToleranceValuePerUnit"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The ToleranceValuePerUnit element is a tolerance value in
            linear units to be applied on a per unit length basis.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UnitLength"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The UnitLength element is the length in linear units over which
            the per-unit-length tolerance is applied.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ToleranceZonePerUnitAngleType">
    <xs:annotation>
      <xs:documentation>
        The ToleranceZonePerUnitAngleType defines a per-unit-angle
        tolerance.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ToleranceValuePerUnit"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The ToleranceValuePerUnit element is a tolerance value in
            linear units to be applied on a per unit angle basis.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UnitAngle"
        type="AngularValueType">
        <xs:annotation>
          <xs:documentation>
            The UnitAngle element is the angle in angular units over which
            the per-unit-angle tolerance is applied.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ToleranceZonePerUnitPolarAreaType">
    <xs:annotation>
      <xs:documentation>
        The ToleranceZonePerUnitPolarAreaType defines a per-unit-polar-area
        tolerance. An angle and a length together define a cylindrical
        segment shaped zone over which the tolerance value applies.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ToleranceValuePerUnit"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The ToleranceValuePerUnit element is a tolerance value in
            linear units to be applied on a per-unit-polar-area basis.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UnitAngle"
        type="AngularValueType">
        <xs:annotation>
          <xs:documentation>
            The UnitAngle element is the angle in angular units over which
            the per-unit-polar-area tolerance is applied.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UnitLength"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The UnitLength element is the length in linear units over which
            the per-unit-polar-area is applied.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DatumReferenceFramesType">
    <xs:annotation>
      <xs:documentation>
        The DatumReferenceFramesType defines a list of datum reference
        frames.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DatumReferenceFrame"
        type="DatumReferenceFrameType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each DatumReferenceFrame element gives information about a
            datum reference frame.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of datum reference frames
          in the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="EventBaseType"
    abstract="true">
    <xs:annotation>
      <xs:documentation>
        The EventBaseType is the abstract base type that defines events.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Description"
        type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The Description element is the description of the event.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the event, used for
          referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="NotableEventType">
    <xs:annotation>
      <xs:documentation>
        The NotableEventType defines an event that might occur during an
        inspection, any instance of which (1) should be reported as a
        NotedEventType if it occurs and the Active element is "true" or (2)
        should not be reported if it occurs and the active element is
        "false".
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EventBaseType">
        <xs:sequence>
          <xs:element name="Active"
            type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
                The Active element indicates whether the event should be
                reported. A value of "true" means an event of this type
                should be reported. A value of "false" means an event of
                this type should not be reported.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NotableEventsType">
    <xs:annotation>
      <xs:documentation>
        The NotableEventsType defines a list of notable events that might
        occur during an inspection.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="NotableEvent"
        type="NotableEventType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each NotableEvent element gives information about a notable
            event that might occur during an inspection.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of notable events in the
          list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="NotedEventType">
    <xs:annotation>
      <xs:documentation>
        The NotedEventType defines an instance of an event that occurred
        during an inspection. It may correspond to some notable event type.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EventBaseType">
        <xs:sequence>
          <xs:element name="SequenceNumber"
            type="NaturalType">
            <xs:annotation>
              <xs:documentation>
                The SequenceNumber element is the sequence number of a
                noted event in a list of noted events. Sequence numbers of
                noted event instances should be assigned in chronological
                order (1, 2, 3, ...).
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TimeOccurred"
            type="xs:dateTime"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional TimeOccurred element is the date and time at
                which the event occurred.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NotableEventId"
            type="QIFReferenceType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional NotableEventId element is the QIF id of a
                notable event type of which this noted event is an
                instance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NotedEventsType">
    <xs:annotation>
      <xs:documentation>
        The NotedEventsType defines a list of inspection related events
        such as occurrence of E-Stop, speed change, broken tip, excessive
        force, out of area errors on CMM, changed digital caliper battery
        etc.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="NotedEvent"
        type="NotedEventType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each NotedEvent element gives information about an event that
            occurred during an inspection.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of noted events in the
          list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:simpleType name="InspectionStatusEnumType">
    <xs:annotation>
      <xs:documentation>
        The InspectionStatusEnumType enumerates values that describe the
        status of an inspection.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="PASS"/>
      <xs:enumeration value="FAIL"/>
      <xs:enumeration value="REWORK"/>
      <xs:enumeration value="SYSERROR"/>
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="NOT_CALCULATED"/>
      <xs:enumeration value="NOT_MEASURED"/>
      <xs:enumeration value="UNDEFINED"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="InspectionStatusType">
    <xs:annotation>
      <xs:documentation>
        The InspectionStatusType defines the status of an inspection.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="InspectionStatusEnum"
        type="InspectionStatusEnumType">
        <xs:annotation>
          <xs:documentation>
            The InspectionStatusEnum element describes an often-used status
            of an inspection.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OtherInspectionStatus"
        type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The OtherInspectionStatus element describes the status of an
            inspection in natural language.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="EntityExternalType">
    <xs:annotation>
      <xs:documentation>
        The EntityExternalType defines the association of a model entity
        with a QIF id. The model to which an instance of EntityExternalType
        belongs will be found in an instance file as the grandparent of
        the instance.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="EntityId"
        type="xs:token">
        <xs:annotation>
          <xs:documentation>
            The EntityId element is the persistent model entity identifier
            assigned on a drawing, in a CAD model file, or on a physical
            model.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Name"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Name element is the name of the entity.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Description"
        type="xs:string"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Description element is the description of the
            entity.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the model entity, used for
          referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="EntitiesExternalType">
    <xs:annotation>
      <xs:documentation>
        The EntitiesExternalType defines a list of external model entities.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Entity"
        type="EntityExternalType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each Entity element gives the association of a QIF id
            with a model entity.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of external model entities
          in the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ZoneDataType">
    <xs:annotation>
      <xs:documentation>
        The ZoneDataType defines a tolerance zone.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="FeatureItemId"
        type="QIFReferenceType">
        <xs:annotation>
          <xs:documentation>
            The FeatureItemId element is the QIF id of a feature
            item reference for zone data.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Bonus"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The Bonus element is the size of the bonus to the tolerance
            zone.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ReferenceLength"
        type="LinearValueType">
        <xs:annotation>
          <xs:documentation>
            The ReferenceLength element is the length of the tolerance
            zone.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ZoneDataSetType">
    <xs:annotation>
      <xs:documentation>
        The ZoneDataSetType collects information about one or more tolerance
        zones.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ZoneData"
        type="ZoneDataType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each ZoneData element gives information about a single tolerance
            zone.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of tolerance zones in this
          set.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="LinearToleranceType">
    <xs:annotation>
      <xs:documentation>
        The LinearToleranceType defines a tolerance on a quantity measured
        in length units.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            The choice is among:
              (1) MaxValue with optional MaxDualValue
              (2) MinValue with optional MinDualValue
              (3) both 1 and 2 (with MaxValue coming first; this
                  choice structure is the normal XML schema language
                  structure for 'one or both')
              (4) a reference to a linear tolerance definition.
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MaxValue"
            type="LinearValueType">
            <xs:annotation>
              <xs:documentation>
                The MaxValue element is the maximum specification limit or
                upper tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MaxDualValue"
            type="LinearDualValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MaxDualValue element is the maximum
                specification limit or upper tolerance in the defined
                units.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:sequence
            minOccurs="0">
            <xs:element name="MinValue"
              type="LinearValueType">
              <xs:annotation>
                <xs:documentation>
                  The optional MinValue element is the minimum
                  specification limit or lower tolerance.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="MinDualValue"
              type="LinearDualValueType"
              minOccurs="0">
              <xs:annotation>
                <xs:documentation>
                  The optional MinDualValue element is the minimum
                  specification limit or lower tolerance in the defined
                  units.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:sequence>
        <xs:sequence>
          <xs:element name="MinValue"
            type="LinearValueType">
            <xs:annotation>
              <xs:documentation>
                The MinValue element is the minimum specification limit or
                lower tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MinDualValue"
            type="LinearDualValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MinDualValue element is the minimum
                specification limit or lower tolerance in the defined
                units.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element name="DefinitionId"
          type="QIFReferenceFullType">
          <xs:annotation>
            <xs:documentation>
              The DefinitionId element is the QIF id of a linear tolerance
              definition.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="DefinedAsLimit"
        type="xs:boolean">
        <xs:annotation>
          <xs:documentation>
            The DefinedAsLimit element signifies whether the MaxValue and
            MinValue represent actual values ('true') or the upper and
            lower tolerances, respectively ('false'). Also when
            DefinedAsLimit is set to 'false', the MaxValue and MinValue may
            be negative.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="LinearToleranceDefinitionType">
    <xs:annotation>
      <xs:documentation>
        The LinearToleranceDefinitionType defines a tolerance on a length
        that can be referenced by its QIF id.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            The choice is among (1) MaxValue, (2) MinValue, (3) both
            (with MaxValue coming first). This choice structure is the
            normal XML schema language structure for 'one or both').
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MaxValue"
            type="LinearValueType">
            <xs:annotation>
              <xs:documentation>
                The MaxValue element is the maximum specification limit or
                upper tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MinValue"
            type="LinearValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MinValue element is the minimum specification
                limit or lower tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element name="MinValue"
          type="LinearValueType">
          <xs:annotation>
            <xs:documentation>
              The MinValue element is the minimum specification limit or
              lower tolerance.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the tolerance definition, used
          for referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="AngularToleranceType">
    <xs:annotation>
      <xs:documentation>
        The AngularToleranceType defines a tolerance on an angle.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            The choice is among (1) MaxValue, (2) MinValue, (3) both
            (with MaxValue coming first; this choice structure is the
            normal XML schema language structure for 'one or both'), or
            (4) a reference to a tolerance definition.
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MaxValue"
            type="AngularValueType">
            <xs:annotation>
              <xs:documentation>
                The MaxValue element is the maximum specification limit or
                upper tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MinValue"
            type="AngularValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MinValue element is the minimum specification
                limit or lower tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element name="MinValue"
          type="AngularValueType">
          <xs:annotation>
            <xs:documentation>
              The MinValue element is the minimum specification limit or
              lower tolerance.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="DefinitionId"
          type="QIFReferenceFullType">
          <xs:annotation>
            <xs:documentation>
              The DefinitionId element is the QIF id of an angular
              tolerance definition.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="DefinedAsLimit"
        type="xs:boolean">
        <xs:annotation>
          <xs:documentation>
            The DefinedAsLimit element signifies whether the MaxValue and
            MinValue represent actual values ('true') or the upper and
            lower tolerances, respectively ('false'). Also when
            DefinedAsLimit is set to 'false', the MaxValue and MinValue may
            be negative.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AngularToleranceDefinitionType">
    <xs:annotation>
      <xs:documentation>
        The AngularToleranceDefinitionType defines a tolerance on an angle
        that can be referenced by its QIF id.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            The choice is among (1) MaxValue, (2) MinValue, (3) both
            (with MaxValue coming first). This choice structure is the
            normal XML schema language structure for 'one or both').
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MaxValue"
            type="AngularValueType">
            <xs:annotation>
              <xs:documentation>
                The MaxValue element is the maximum specification limit or
                upper tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MinValue"
            type="AngularValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MinValue element is the minimum specification
                limit or lower tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element name="MinValue"
          type="AngularValueType">
          <xs:annotation>
            <xs:documentation>
              The MinValue element is the minimum specification limit or
              lower tolerance.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the tolerance definition, used
          for referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="TemperatureToleranceType">
    <xs:annotation>
      <xs:documentation>
        The TemperatureToleranceType defines a tolerance on a quantity
        measured in temperature units.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            The choice is among (1) MaxValue, (2) MinValue, or (3) both
            (with MaxValue coming first; this choice structure is the
            normal XML schema language structure for 'one or both'), or
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MaxValue"
            type="TemperatureValueType">
            <xs:annotation>
              <xs:documentation>
                The MaxValue element is the maximum specification limit or
                upper tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MinValue"
            type="TemperatureValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MinValue element is the minimum specification
                limit or lower tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element name="MinValue"
          type="TemperatureValueType">
          <xs:annotation>
            <xs:documentation>
              The MinValue element is the minimum specification limit or
              lower tolerance.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="DefinedAsLimit"
        type="xs:boolean">
        <xs:annotation>
          <xs:documentation>
            The DefinedAsLimit element signifies whether the MaxValue and
            MinValue represent actual values ('true') or the upper and
            lower tolerances, respectively ('false'). Also when
            DefinedAsLimit is set to 'false', the MaxValue and MinValue may
            be negative.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AreaToleranceType">
    <xs:annotation>
      <xs:documentation>
        The AreaToleranceType defines a tolerance on a quantity measured in
        area units.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            The choice is among (1) MaxValue, (2) MinValue, or (3) both
            (with MaxValue coming first; this choice structure is the
            normal XML schema language structure for 'one or both'), or
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MaxValue"
            type="AreaValueType">
            <xs:annotation>
              <xs:documentation>
                The MaxValue element is the maximum specification limit or
                upper tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MinValue"
            type="AreaValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MinValue element is the minimum specification
                limit or lower tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element name="MinValue"
          type="AreaValueType">
          <xs:annotation>
            <xs:documentation>
              The MinValue element is the minimum specification limit or
              lower tolerance.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="DefinedAsLimit"
        type="xs:boolean">
        <xs:annotation>
          <xs:documentation>
            The DefinedAsLimit element signifies whether the MaxValue and
            MinValue represent actual values ('true') or the upper and
            lower tolerances, respectively ('false'). Also when
            DefinedAsLimit is set to 'false', the MaxValue and MinValue may
            be negative.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ForceToleranceType">
    <xs:annotation>
      <xs:documentation>
        The ForceToleranceType defines a tolerance on a quantity measured
        in force units.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            The choice is among (1) MaxValue, (2) MinValue, or (3) both
            (with MaxValue coming first; this choice structure is the
            normal XML schema language structure for 'one or both'), or
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MaxValue"
            type="ForceValueType">
            <xs:annotation>
              <xs:documentation>
                The MaxValue element is the maximum specification limit or
                upper tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MinValue"
            type="ForceValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MinValue element is the minimum specification
                limit or lower tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element name="MinValue"
          type="ForceValueType">
          <xs:annotation>
            <xs:documentation>
              The MinValue element is the minimum specification limit or
              lower tolerance.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="DefinedAsLimit"
        type="xs:boolean">
        <xs:annotation>
          <xs:documentation>
            The DefinedAsLimit element signifies whether the MaxValue and
            MinValue represent actual values ('true') or the upper and
            lower tolerances, respectively ('false'). Also when
            DefinedAsLimit is set to 'false', the MaxValue and MinValue may
            be negative.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MassToleranceType">
    <xs:annotation>
      <xs:documentation>
        The MassToleranceType defines a tolerance on a quantity measured in
        mass units.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            The choice is among (1) MaxValue, (2) MinValue, or (3) both
            (with MaxValue coming first; this choice structure is the
            normal XML schema language structure for 'one or both'), or
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MaxValue"
            type="MassValueType">
            <xs:annotation>
              <xs:documentation>
                The MaxValue element is the maximum specification limit or
                upper tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MinValue"
            type="MassValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MinValue element is the minimum specification
                limit or lower tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element name="MinValue"
          type="MassValueType">
          <xs:annotation>
            <xs:documentation>
              The MinValue element is the minimum specification limit or
              lower tolerance.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="DefinedAsLimit"
        type="xs:boolean">
        <xs:annotation>
          <xs:documentation>
            The DefinedAsLimit element signifies whether the MaxValue and
            MinValue represent actual values ('true') or the upper and
            lower tolerances, respectively ('false'). Also when
            DefinedAsLimit is set to 'false', the MaxValue and MinValue may
            be negative.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PressureToleranceType">
    <xs:annotation>
      <xs:documentation>
        The PressureToleranceType defines a tolerance on a quantity
        measured in pressure units.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            The choice is among (1) MaxValue, (2) MinValue, or (3) both
            (with MaxValue coming first; this choice structure is the
            normal XML schema language structure for 'one or both'), or
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MaxValue"
            type="PressureValueType">
            <xs:annotation>
              <xs:documentation>
                The MaxValue element is the maximum specification limit or
                upper tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MinValue"
            type="PressureValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MinValue element is the minimum specification
                limit or lower tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element name="MinValue"
          type="PressureValueType">
          <xs:annotation>
            <xs:documentation>
              The MinValue element is the minimum specification limit or
              lower tolerance.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="DefinedAsLimit"
        type="xs:boolean">
        <xs:annotation>
          <xs:documentation>
            The DefinedAsLimit element signifies whether the MaxValue and
            MinValue represent actual values ('true') or the upper and
            lower tolerances, respectively ('false'). Also when
            DefinedAsLimit is set to 'false', the MaxValue and MinValue may
            be negative.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SpeedToleranceType">
    <xs:annotation>
      <xs:documentation>
        The SpeedToleranceType defines a tolerance on a quantity measured
        in speed units.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            The choice is among (1) MaxValue, (2) MinValue, or (3) both
            (with MaxValue coming first; this choice structure is the
            normal XML schema language structure for 'one or both'), or
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MaxValue"
            type="SpeedValueType">
            <xs:annotation>
              <xs:documentation>
                The MaxValue element is the maximum specification limit or
                upper tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MinValue"
            type="SpeedValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MinValue element is the minimum specification
                limit or lower tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element name="MinValue"
          type="SpeedValueType">
          <xs:annotation>
            <xs:documentation>
              The MinValue element is the minimum specification limit or
              lower tolerance.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="DefinedAsLimit"
        type="xs:boolean">
        <xs:annotation>
          <xs:documentation>
            The DefinedAsLimit element signifies whether the MaxValue and
            MinValue represent actual values ('true') or the upper and
            lower tolerances, respectively ('false'). Also when
            DefinedAsLimit is set to 'false', the MaxValue and MinValue may
            be negative.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TimeToleranceType">
    <xs:annotation>
      <xs:documentation>
        The TimeToleranceType defines a tolerance on a quantity measured in
        time units.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            The choice is among (1) MaxValue, (2) MinValue, or (3) both
            (with MaxValue coming first; this choice structure is the
            normal XML schema language structure for 'one or both'), or
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MaxValue"
            type="TimeValueType">
            <xs:annotation>
              <xs:documentation>
                The MaxValue element is the maximum specification limit or
                upper tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MinValue"
            type="TimeValueType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional MinValue element is the minimum specification
                limit or lower tolerance.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:element name="MinValue"
          type="TimeValueType">
          <xs:annotation>
            <xs:documentation>
              The MinValue element is the minimum specification limit or
              lower tolerance.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="DefinedAsLimit"
        type="xs:boolean">
        <xs:annotation>
          <xs:documentation>
            The DefinedAsLimit element signifies whether the MaxValue and
            MinValue represent actual values ('true') or the upper and
            lower tolerances, respectively ('false'). Also when
            DefinedAsLimit is set to 'false', the MaxValue and MinValue may
            be negative.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="DimensionModifierEnumType">
    <xs:annotation>
      <xs:documentation>
        The DimensionModifierEnumType enumerates values that signify that a
        dimension is a basic or theoretically exact dimension, an
        un-measurable dimension that is set to its nominal value, or a
        reference or auxiliary dimension. ISO theoretically exact
        dimensions (TED) and ASME basic dimensions are analogous concepts
        both of which are signified with the BASIC_OR_TED enumeration. ISO
        auxiliary dimensions and ASME reference dimensions are analogous
        concepts both of which are signified with the
        REFERENCE_OR_AUXILIARY enumeration.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="BASIC_OR_TED"/>
      <xs:enumeration value="SET"/>
      <xs:enumeration value="REFERENCE_OR_AUXILIARY"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DimensionDeterminationEnumType">
    <xs:annotation>
      <xs:documentation>
        The DimensionDeterminationEnumType enumerates values that signify
        the method by which a measured dimension will be determined. The
        method may signify a measurement technique, an association
        criterion, or a calculation method.

          LP = two-point size
          LS = local size defined by a sphere
          GG = least-squares association criterion
          GX = maximum inscribed association criterion
          GN = minimum circumscribed association criterion
          GC = minimax (Chebyshev) association criterion
          CC = circumference diameter (calculated size)
          CA = area diameter (calculated size)
          CV = volume diameter (calculated size)
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="LP"/>
      <xs:enumeration value="LS"/>
      <xs:enumeration value="GG"/>
      <xs:enumeration value="GX"/>
      <xs:enumeration value="GN"/>
      <xs:enumeration value="GC"/>
      <xs:enumeration value="CC"/>
      <xs:enumeration value="CA"/>
      <xs:enumeration value="CV"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SignificantDimensionEnumType">
    <xs:annotation>
      <xs:documentation>
        The SignificantDimensionEnumType enumerates values that signify
        which aspect of a measured dimension is significant to a tolerance
        evaluation.

        SX = maximum size
        SN = minimum size
        SA = average size
        SM = median size
        SD = mid-range size
        SR = range of sizes
        SQ = standard deviation of sizes
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="SX"/>
      <xs:enumeration value="SN"/>
      <xs:enumeration value="SA"/>
      <xs:enumeration value="SM"/>
      <xs:enumeration value="SD"/>
      <xs:enumeration value="SR"/>
      <xs:enumeration value="SQ"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="DimensionModifiersType">
    <xs:annotation>
      <xs:documentation>
        (ISO specific) The DimensionModifiersType provides containers for
        dimension modifiers.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DeterminationModifier"
        type="DimensionDeterminationEnumType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional DeterminationModifier element modifies the
            dimension by specifying how the dimension measured value will
            be determined.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SignificanceModifier"
        type="SignificantDimensionEnumType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional SignificanceModifier element modifies the
            dimension by specifying which aspect of a measured dimension is
            significant to a tolerance evaluation.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SectionModifier"
        type="SectionModifierEnumType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional SectionModifier element modifies the dimension
            by specifying feature cross-section modifier.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="NonToleranceEnumType">
    <xs:annotation>
      <xs:documentation>
        The NonToleranceEnumType enumerates values that describe a
        dimension characteristic that is not toleranced but which
        nevertheless needs to be tracked and/or reported.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="MEASURED">
        <xs:annotation>
          <xs:documentation>
            The MEASURED enumeration defines a characteristic as being a
            basic dimension which can be measured and therefore a valid
            measured value may exist.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SET">
        <xs:annotation>
          <xs:documentation>
            The SET enumeration defines a characteristic as being a
            dimension which cannot be measured and therefore no valid
            measured value exists and the measured value is set to the
            nominal value for reporting purposes.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="LimitsAndFitsZoneVarianceType">
    <xs:annotation>
      <xs:documentation>
        The LimitsAndFitsZoneVarianceType enumerates values that describe
        the zone variance portion of a limits and fits specification.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="HOLE"/>
      <xs:enumeration value="SHAFT"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="LimitsAndFitsSpecificationType">
    <xs:annotation>
      <xs:documentation>
        The LimitsAndFitsSpecificationType defines a limits
        and fits specification.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="FormVariance"
        type="xs:token">
        <xs:annotation>
          <xs:documentation>
            The FormVariance element defines the form variance portion of
            the limits and fits specification.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Grade"
        type="xs:token">
        <xs:annotation>
          <xs:documentation>
            The Grade element defines the grade portion of the
            limits and fits specification.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="zoneVariance"
      type="LimitsAndFitsZoneVarianceType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required zoneVariance attribute is the zone variance type
          for the limits and fits specification.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:simpleType name="CommonFileSpecEnumType">
    <xs:annotation>
      <xs:documentation>
        The FileSpecEnumType enumerates values that describe common file
        formats. The values are common file name suffixes that indicate
        file type.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="AVI"/>
      <xs:enumeration value="BMP"/>
      <xs:enumeration value="DOC"/>
      <xs:enumeration value="DOCX"/>
      <xs:enumeration value="DXF"/>
      <xs:enumeration value="DTD"/>
      <xs:enumeration value="GIF"/>
      <xs:enumeration value="GZIP"/>
      <xs:enumeration value="HTML"/>
      <xs:enumeration value="IGES"/>
      <xs:enumeration value="JPEG"/>
      <xs:enumeration value="JPG"/>
      <xs:enumeration value="MOV"/>
      <xs:enumeration value="MPEG"/>
      <xs:enumeration value="MPG"/>
      <xs:enumeration value="PDF"/>
      <xs:enumeration value="PNG"/>
      <xs:enumeration value="PPM"/>
      <xs:enumeration value="PPT"/>
      <xs:enumeration value="PRT"/>
      <xs:enumeration value="RAR"/>
      <xs:enumeration value="RTF"/>
      <xs:enumeration value="STL"/>
      <xs:enumeration value="STEP"/>
      <xs:enumeration value="STP"/>
      <xs:enumeration value="TAR"/>
      <xs:enumeration value="TIF"/>
      <xs:enumeration value="TIFF"/>
      <xs:enumeration value="TXT"/>
      <xs:enumeration value="WMV"/>
      <xs:enumeration value="XLS"/>
      <xs:enumeration value="XLSX"/>
      <xs:enumeration value="XML"/>
      <xs:enumeration value="XSD"/>
      <xs:enumeration value="X_T"/>
      <xs:enumeration value="ZIP"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="FileSpecType">
    <xs:annotation>
      <xs:documentation>
        The FileSpecType defines the format of a file.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="CommonFileSpecEnum"
        type="CommonFileSpecEnumType">
        <xs:annotation>
          <xs:documentation>
            The CommonFileSpecEnum element denotes a common file format.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OtherFileSpec"
        type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The OtherFileSpec element describes a file format in natural
            language.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="ExternalFileReferenceType">
    <xs:annotation>
      <xs:documentation>
        The ExternalFileReferenceType defines an external file reference
        including the file's location, type and description.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="URI"
        type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>
            The URI element is a Uniform Resource Identifier for the
            information, which may be, for example, a file or a web site.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FileSpec"
        type="FileSpecType">
        <xs:annotation>
          <xs:documentation>
            The FileSpec element describes the file type of the file found
            at the URI.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Description"
        type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The Description element is a description of the information in
            the file found at the URI.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ExternalFileReferencesType">
    <xs:annotation>
      <xs:documentation>
        The ExternalFileReferencesType defines a list of external file
        references.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ExternalFileReference"
        type="ExternalFileReferenceType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each ExternalFileReference element contains information about a
            single external file reference.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of external file
          references in this list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="DatumTargetDefinitionsType">
    <xs:annotation>
      <xs:documentation>
        The DatumTargetDefinitionsType defines a list of datum target
        definitions.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DatumTarget"
        type="DatumTargetType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each DatumTarget element gives information about a datum target
            definition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of datum target
          definitions in the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="DatumDefinitionType">
    <xs:annotation>
      <xs:documentation>
        The DatumDefinitionType defines information about a datum.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DatumLabel"
        type="xs:NMTOKEN">
        <xs:annotation>
          <xs:documentation>
            The DatumLabel element is the label applied to the datum
            feature.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DatumTargetIds"
        type="ArrayReferenceFullType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional DatumTargetIds element is a list of the QIF ids of
            datum targets associated with the datum.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FeatureNominalIds"
        type="ArrayReferenceFullType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional FeatureNominalIds element is a list of QIF ids of
            feature nominals to be used to construct the datum.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the datum definition, used for
          referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="DatumDefinitionsType">
    <xs:annotation>
      <xs:documentation>
        The DatumDefinitionsType defines a list of datum definitions.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DatumDefinition"
        type="DatumDefinitionType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each DatumDefinition element gives information about a datum.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of datum definitions in
          the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="DatumTargetType">
    <xs:annotation>
      <xs:documentation>
        The DatumTargetType defines a datum target definition.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DatumTargetLabel"
        type="xs:token">
        <xs:annotation>
          <xs:documentation>
            The DatumTargetLabel element is the label for the datum target
            which includes both the datum name and the target number, for
            example 'A1'.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FeatureNominalId"
        type="QIFReferenceFullType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional FeatureNominalId element is the QIF id of the
            feature nominal on which the datum target lies.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TargetZoneId"
        type="QIFReferenceFullType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional TargetZoneId element is the QIF id
            of the feature zone.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MovableDatumTarget"
        type="MovableDatumTargetDirectionType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional MovableDatumTarget element identifies the datum
            target as a movable datum target and specifies the allowed
            direction of movement.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the datum target definition,
          used for referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="EmployeeType">
    <xs:annotation>
      <xs:documentation>
        The EmployeeType defines employee information.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name"
        type="xs:token">
        <xs:annotation>
          <xs:documentation>
            The Name element is the name of the employee.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EmployeeId"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional EmployeeId element is the company id number of the
            employee.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Shift"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Shift element is the shift number of the employee.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FileType">
    <xs:annotation>
      <xs:documentation>
        The FileType defines file information.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name"
        type="xs:token">
        <xs:annotation>
          <xs:documentation>
            The Name element is the fully qualified identifier (URI) of
            the file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Version"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Version element is the version number of the file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Format"
        type="DigitalModelFormatType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Format element is the file format.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SoftwareType">
    <xs:annotation>
      <xs:documentation>
        The SoftwareType defines information about a software application.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VendorName"
        type="xs:token">
        <xs:annotation>
          <xs:documentation>
            The VendorName element is the company name of the software
            vendor.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ApplicationName"
        type="xs:token">
        <xs:annotation>
          <xs:documentation>
            The ApplicationName element is the name of the software
            application.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Version"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Version element is the version number of the
            software application.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Description"
        type="xs:string"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Description element is the description of the
            software application.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="URI"
        type="xs:anyURI"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional URI element is a Uniform Resource Identifier for
            the software application, for example, a file or a web site.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ReferencedStandardIds"
        type="ArrayReferenceType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional ReferencedStandardIds element are a list of ids of
            standards or specifications referenced by or associated with
            this software application.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the software, used
          for referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:simpleType name="StandardsOrganizationEnumType">
    <xs:annotation>
      <xs:documentation>
        The StandardsOrganizationEnumType enumerates values that describe
        standards organization names.

          AIAG - Automotive Industry Action Group
          ANSI - American National Standards Institute
          ASAM - Association for Automation and Measuring Systems
          ASME - American Society of Mechanical Engineers
          AWS - American Welding Society
          BSI - British Standards Institution
          DIN - Deutsches Institut für Normung
          DOD - U.S. Department of Defense
          EASC - Euro-Asian Council for Standardization, Metrology
                 and Certification
          GOST - Standards of former USSR
          GOST_R - Russian Standards
          IEC - International Electrotechnical Commission
          IEEE - Institute of Electrical and Electronics Engineers and
                 IEEE Standards Association
          ISO -  International Organization for Standardization
          JEITA - Japan Electronics and Information Technology Industries
                  Association
          JIS - Japanese Industrial Standards
          UL - Underwriters Laboratories
          VDA - German Association of the Automotive Industry
          W3C - World Wide Web Consortium
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="AIAG"/>
      <xs:enumeration value="ANSI"/>
      <xs:enumeration value="ASAM"/>
      <xs:enumeration value="ASME"/>
      <xs:enumeration value="AWS"/>
      <xs:enumeration value="BSI"/>
      <xs:enumeration value="DIN"/>
      <xs:enumeration value="DOD"/>
      <xs:enumeration value="EASC"/>
      <xs:enumeration value="GOST"/>
      <xs:enumeration value="GOST_R"/>
      <xs:enumeration value="IEC"/>
      <xs:enumeration value="IEEE"/>
      <xs:enumeration value="ISO"/>
      <xs:enumeration value="JEITA"/>
      <xs:enumeration value="JIS"/>
      <xs:enumeration value="UL"/>
      <xs:enumeration value="VDA"/>
      <xs:enumeration value="W3C"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="StandardsOrganizationType">
    <xs:annotation>
      <xs:documentation>
        The StandardOrganizationType defines information about an
        organization issuing a standard or specification.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:annotation>
        <xs:documentation>
          This compositor provides a choice between the organization name
          as an enumeration of a common type and a user defined string
          that describes the standards organization name.
        </xs:documentation>
      </xs:annotation>
      <xs:element name="StandardsOrganizationEnum"
        type="StandardsOrganizationEnumType">
        <xs:annotation>
          <xs:documentation>
            The StandardsOrganizationEnum element specifies an often-used
            standards organization name.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OtherStandardsOrganization"
        type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The OtherStandardsOrganization element specifies the standards
            organization name in natural language.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="StandardType">
    <xs:annotation>
      <xs:documentation>
        The StandardType defines information about a standard or
        specification. The Organization, Designator, and Year elements
        together identify the standard or specification,
        e.g., ASME Y14.5-2009, ISO 1101:2017.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Organization"
        type="StandardsOrganizationType">
        <xs:annotation>
          <xs:documentation>
            The Organization element is the name of the organization issuing
            the standard or specification, e.g. ASME, ISO as enumerations, 
            or "Acme Widget" as a string.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Designator"
        type="xs:token">
        <xs:annotation>
          <xs:documentation>
            The Designator element is the name of the designator of the
            standard or specification, e.g. Y14.5, 1101.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Year"
        type="xs:string"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Year element is the year the standard or
            specification was released, e.g. 1994, 2009, 2017.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Title"
        type="xs:string"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Title element is the title of the
            standard or specification, e.g. "Dimensioning and Tolerancing",
            "Geometrical product specifications".
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Description"
        type="xs:string"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Description element is the description of the
            standard or specification.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="URI"
        type="xs:anyURI"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional URI element is a Uniform Resource Identifier for
            the standard or specification, for example, a file or a web
            site.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ISBN"
        type="xs:NMTOKEN"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional ISBN element is the International Standard Book
            Number for the standard or specification.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ReferencedStandardIds"
        type="ArrayReferenceType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional ReferencedStandardIds element is a list of ids of
            standards or specifications referenced by or associated with
            this standard or specification.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the standard or specification,
          used for referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="StandardsType">
    <xs:annotation>
      <xs:documentation>
        The StandardsType defines a list of standards and or specifications.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Standard"
        type="StandardType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each Standard element defines information about a particular
            standard or specification.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of standard and
          specification definitions in the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="StandardsDefinitions"
    type="StandardsType">
    <xs:annotation>
      <xs:documentation>
        The global StandardsDefinitions element defines standards and
        specifications.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="SoftwaresType">
    <xs:annotation>
      <xs:documentation>
        The SoftwaresType defines a list of software applications.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Software"
        type="SoftwareType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each Software element defines information about a particular
            software application.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of software applications
          in the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="AlgorithmType">
    <xs:annotation>
      <xs:documentation>
        The AlgorithmType defines information about an algorithm in a
        software application or in a standard or specification.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:annotation>
          <xs:documentation>
            This compositor provides a choice between the QIF id of a 
            defined software or the QIF id of a defined standard or
            specification.
          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="SoftwareId"
            type="QIFReferenceType">
            <xs:annotation>
              <xs:documentation>
                The SoftwareId element is the id of the software
                application.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Parameters"
            type="xs:string"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional Parameters element defines software specific
                parameters to be used by the algorithm.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:sequence>
          <xs:element name="StandardId"
            type="QIFReferenceType">
            <xs:annotation>
              <xs:documentation>
                The StandardId element is the id of the standard or
                specification.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Section"
            type="xs:string"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional Section element defines the section of the
                standard or specification in which the algorithm can be
                found.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:choice>
      <xs:element name="Name"
        type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The Name element is the name of the algorithm.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Description"
        type="xs:string"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Description element is a description of the
            algorithm.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the algorithm, used for
          referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="AlgorithmsType">
    <xs:annotation>
      <xs:documentation>
        The AlgorithmsType defines a list of algorithms defined in software
        or in a standard or specification.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Algorithm"
        type="AlgorithmType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each Algorithm element defines information about a particular
            algorithm.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of algorithm definitions
          in the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="SoftwareDefinitions"
    type="SoftwaresType">
    <xs:annotation>
      <xs:documentation>
        The global SoftwareDefinitions element defines software
        applications.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="AlgorithmDefinitions"
    type="AlgorithmsType">
    <xs:annotation>
      <xs:documentation>
        The global AlgorithmDefinitions element defines algorithms.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="OrganizationType">
    <xs:annotation>
      <xs:documentation>
        The OrganizationType defines information about an organization.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name"
        type="xs:token">
        <xs:annotation>
          <xs:documentation>
            The Name element is the name of the organization.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Address"
        type="PhysicalAddressType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Address element is the address of the organization.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PhysicalAddressType">
    <xs:annotation>
      <xs:documentation>
        The PhysicalAddressType defines a physical address.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Description"
        type="AddressDescriptionType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Description element characterizes the type of the
            address to distinguish among delivery, postal, and visitor
            addresses.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="InternalLocation"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional InternalLocation element is an
            organization-defined address for internal mail delivery.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="StreetNumber"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional StreetNumber element is the number of a location
            on a street.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Street"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Street element is the name of the street.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PostalBox"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional PostalBox element is the number of a postal box.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Town"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Town element is the name of a town or city.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Region"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Region element is the name of a region.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PostalCode"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional PostalCode element is the code used by the
            country's postal service.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Country"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Country element is the name of the country.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FacsimileNumber"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional FacsimileNumber element is the telephone number
            where facsimiles may be received.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TelephoneNumber"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional TelephoneNumber element is the number where
            telephone calls may be received.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ElectronicMailAddress"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional ElectronicMailAddress element is the electronic
            mail address at which electronic messages may be received.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TelexNumber"
        type="xs:token"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional TelexNumber element is the number at which telex
            messages may be received.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="AddressDescriptionEnumType">
    <xs:annotation>
      <xs:documentation>
        The AddressDescriptionEnumType enumerates values that describe the
        type of a physical address.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="DELIVERY"/>
      <xs:enumeration value="POSTAL"/>
      <xs:enumeration value="VISITOR"/>
      <xs:enumeration value="NOTDEFINED"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="AddressDescriptionType">
    <xs:annotation>
      <xs:documentation>
        The AddressDescriptionType defines the type of a physical address.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="AddressDescriptionEnum"
        type="AddressDescriptionEnumType">
        <xs:annotation>
          <xs:documentation>
            The AddressDescriptionEnum element describes an often-used type
            of a physical address.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="OtherAddressDescription"
        type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The OtherAddressDescription element describes a type of a
            physical address in natural language.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="LocationType">
    <xs:annotation>
      <xs:documentation>
        The LocationType defines a physical location.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="LocationDescription"
        type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The LocationDescription element gives a natural language
            description of a location. If an address is also given, the
            description need not duplicate that information.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Address"
        type="PhysicalAddressType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Address element gives a physical address for a
            location.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the location, used for
          referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="CustomerOrganizationType">
    <xs:annotation>
      <xs:documentation>
        The CustomerOrganizationType defines information about the
        supplier's view of the customer.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OrganizationType">
        <xs:sequence>
          <xs:element name="CustomerNumber"
            type="xs:token">
            <xs:annotation>
              <xs:documentation>
                The CustomerNumber element is the supplier's number for the
                customer.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="VersionHistoryType">
    <xs:annotation>
      <xs:documentation>
        The VersionsHistoryType defines information about earlier versions
        of a QIF instance file.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="EarlierVersion"
        type="VersionReferenceType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each EarlierVersion element contains information about one
            earlier version of the QIF instance file in which the
            VersionHistoryType appears.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of earlier versions in the
          list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="VersionBaseType">
    <xs:annotation>
      <xs:documentation>
        The VersionBase Type defines basic information about a
        version of a QIF instance file and is the base type for other
        version types.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="TimeCreated"
        type="xs:dateTime"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional TimeCreated element gives the time when the
            version was created.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SignOffs"
        type="SignOffsType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional SignOffs element identifies the employees who
            signed off on the version.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="VersionType">
    <xs:annotation>
      <xs:documentation>
        The VersionType defines information about the version of the QIF
        instance file in which the VersionType is placed.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="VersionBaseType">
        <xs:sequence>
          <xs:element name="ThisInstanceQPId"
            type="QPIdType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional ThisInstanceQPId element is a UUID identifier
                of a version of a QIF instance file.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="VersionReferenceType">
    <xs:annotation>
      <xs:documentation>
        The VersionReferenceType defines information about a version of an
        external QIF instance file.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="VersionBaseType">
        <xs:sequence>
          <xs:element name="QPIdReference"
            type="QPIdReferenceType"
            minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The optional QPIdReference element uses a QPId to
                identify a version of a QIF instance file.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="SignOffsType">
    <xs:annotation>
      <xs:documentation>
        The SignOffsType defines a list of one or more employees who have
        signed off on a particular version of something.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Employee"
        type="EmployeeType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each Employee element is employee information for one employee
            involved in the sign off.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of employees in the list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:simpleType name="MaterialClassEnumType">
    <xs:annotation>
      <xs:documentation>
        The MaterialClassEnumType enumerates often-used material types.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="PLASTIC"/>
      <xs:enumeration value="METAL"/>
      <xs:enumeration value="WOOD"/>
      <xs:enumeration value="STONE"/>
      <xs:enumeration value="RUBBER"/>
      <xs:enumeration value="COMPOSITE"/>
      <xs:enumeration value="FOAM"/>
      <xs:enumeration value="CERAMIC"/>
      <xs:enumeration value="GLASS"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="MaterialType">
    <xs:annotation>
      <xs:documentation>
        The MaterialType defines properties of a material.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="Attributes"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Attributes element contains user defined
            attributes (typified, binary array, or XML structured).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice
        minOccurs="0">
        <xs:element name="MaterialClassEnum"
          type="MaterialClassEnumType">
          <xs:annotation>
            <xs:documentation>
              The MaterialClassEnum element describes an often-used
              material type.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="OtherMaterialClass"
          type="xs:string">
          <xs:annotation>
            <xs:documentation>
              The OtherMaterialClass element describes an often-used
              material type in natural language.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Description"
        type="xs:string"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional Description element is a description of the
            material.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MassDensity"
        type="xs:double"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional MassDensity element is the material mass density
            parameter in the model units.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PoissonsRatio"
        type="xs:double"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional PoissonsRatio element is the material Poisson's
            ratio parameter in the model units.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="YoungsModulus"
        type="xs:double"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional YoungsModulus element is the material Young's
            modulus parameter in the model units.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UltimateTensileStress"
        type="xs:double"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional UltimateTensileStress element is the material
            ultimate tensile stress parameter in the model units.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CompressiveYieldStress"
        type="xs:double"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional CompressiveYieldStress element is the material
            compressive yield stress parameter in the model units.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TensileYieldStress"
        type="xs:double"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional TensileYieldStress element is the material tensile
            yield stress parameter in the model units.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ThermalExpansion"
        type="xs:double"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional ThermalExpansion element is the material thermal
            expansion parameter in the model units.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SpecificHeatCapacity"
        type="xs:double"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional SpecificHeatCapacity element is the material
            specific heat capacity parameter in the model units.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ThermalConductivity"
        type="xs:double"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The optional ThermalConductivity element is the material thermal
            conductivity parameter in the model units.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Index"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required Index attribute is a unique material index
          in the material library.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="MaterialName"
      type="xs:token"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required MaterialName attribute is the name of the material.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="MaterialsType">
    <xs:annotation>
      <xs:documentation>
        The MaterialsType defines a list of materials.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Material"
        type="MaterialType"
        maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Each Material element defines a material used in a product.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="n"
      type="NaturalType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The required n attribute is the number of materials 
          in this list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="MaterialLibrary"
    type="MaterialsType">
    <xs:annotation>
      <xs:documentation>
        The global MaterialLibrary element is a collection of all materials
        used in a product.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="VirtualMeasurementType">
    <xs:annotation>
      <xs:documentation>
        The VirtualMeasurementType is a placeholder used in a
        characteristic item or feature item to represent a measured object
        of the same type as the item. For example, an instance of
        VirtualMeasurementType placed in an instance of
        DiameterCharacteristicItemType would represent an instance of
        DiameterCharacteristicMeasurementType. Parameters of the virtual
        measurement object become available after an evaluation of the
        item.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="id"
      type="QIFIdType"
      use="required">
      <xs:annotation>
        <xs:documentation>
          The id attribute is the QIF id of the virtual characteristic
          measurement, used for referencing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="PointSetReferenceBaseType"
    abstract="true">
    <xs:annotation>
      <xs:documentation>
        The abstract PointSetReferenceBaseType is the base type for
        references to all or portions of point sets, either nominal or
        measured.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="QIFReferenceType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="PointSetReferenceWholeType">
    <xs:annotation>
      <xs:documentation>
        The PointSetReferenceWholeType defines a reference to a
        whole point set.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="PointSetReferenceBaseType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="PointSetReferenceRangeType">
    <xs:annotation>
      <xs:documentation>
        The PointSetReferenceType defines a reference to a
        point set with a range of point indexes.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="PointSetReferenceBaseType">
        <xs:attribute name="range"
          type="Natural2Type"
          use="required">
          <xs:annotation>
            <xs:documentation>
              The required range attribute is a pair of two indexes
              indicating the start and end (inclusive) of a range of
              points in a point set.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="PointSetReferenceSingleType">
    <xs:annotation>
      <xs:documentation>
        The PointSetReferenceSingleType defines a reference to a
        single point within a point set but its index.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="PointSetReferenceBaseType">
        <xs:attribute name="index"
          type="NaturalType"
          use="required">
          <xs:annotation>
            <xs:documentation>
              The required index attribute is the index of a single
              point in a point set.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

</xs:schema>
